#!/usr/bin/bash

set -e # Exit the script on error
set -m # Run all jobs in their own process group

if ! type "python" > /dev/null; then
    echo "This script requires python"
    exit 1
fi

if ! type "psql" > /dev/null; then
    echo "This script requires psql"
    exit 1
fi

if [[ "$KUBECONFIG" == "" ]]; then
    echo "No KUBECONFIG env var set"
    exit 1
fi

FORWARD_TARGET=${1:-"services/postgres-r"}
case $FORWARD_TARGET in
    "--r")
        FORWARD_TARGET="services/postgres-r"
        ;;
    "--ro")
        FORWARD_TARGET="services/postgres-ro"
        ;;
    "--rw")
        FORWARD_TARGET="services/postgres-rw"
        ;;
esac

creds=$(kubectl get secrets -n db postgres-cluster --template='{{.data.username}},{{.data.password}},{{.data.database}}')
IFS=, read -r username password database <<< "$creds"

username=$(echo "$username" | base64 -d)
password=$(echo "$password" | base64 -d)
database=$(echo "$database" | base64 -d)

# Get a random available port
bind_port=$(python -c 'import socket; s=socket.socket(); s.bind(("", 0)); print(s.getsockname()[1]); s.close()');
connection_str="postgresql://$username:$password@localhost:$bind_port/$database"

cmd="kubectl port-forward -n db $FORWARD_TARGET $bind_port:5432"
eval "$cmd > /dev/null 2>&1 &"

# Ensure that the port forward is killed when script exits
trap '{
    pkill -f "$cmd"
}' EXIT

# Wait for port forward
sleep 0.5

psql "$connection_str"
