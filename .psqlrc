\set QUIET ON

\pset null 'NULL'
\pset footer on

\x auto

\set COMP_KEYWORD_CASE upper

\timing

\set hostname 'SELECT pg_read_file(\'/etc/hostname\') as hostname;'
\set db_size 'SELECT datname AS database, pg_size_pretty(pg_database_size(datname)) AS size, pg_database_size(datname) AS database_size FROM pg_database ORDER BY database_size DESC;'
\set table_size 'SELECT schema_name, relname, pg_size_pretty(table_size) AS size, table_size FROM ( SELECT pg_catalog.pg_namespace.nspname           AS schema_name, relname, pg_relation_size(pg_catalog.pg_class.oid) AS table_size FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON relnamespace = pg_catalog.pg_namespace.oid) t WHERE schema_name NOT LIKE \'pg_%\' ORDER BY table_size DESC;'
\set locks 'SELECT bl.pid AS blocked_pid, a.usename AS blocked_user, kl.pid AS blocking_pid, ka.usename AS blocking_user, a.query AS blocked_statement FROM pg_catalog.pg_locks bl JOIN pg_catalog.pg_stat_activity a ON bl.pid = a.pid JOIN pg_catalog.pg_locks kl JOIN pg_catalog.pg_stat_activity ka ON kl.pid = ka.pid ON bl.transactionid = kl.transactionid AND bl.pid != kl.pid WHERE NOT bl.granted;'
\set long_running_queries 'SELECT pid, user, pg_stat_activity.query_start, now() - pg_stat_activity.query_start AS query_time, query, state, wait_event_type, wait_event FROM pg_stat_activity WHERE (now() - pg_stat_activity.query_start) > interval \'5 minutes\' AND state != \'idle\';'

\echo '-- Helpful queries'
\echo '\t :hostname             -- Get server hostname'
\echo '\t :db_size              -- Show size of all dbs'
\echo '\t :table_size           -- Show size of all tables in the current db'
\echo '\t :locks                -- Find locks'
\echo '\t :long_running_queries -- Find queries running > 5min'
